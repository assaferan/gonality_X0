X:=X0NQuotient(163,[]);
C2:=ChangeRing(X,GF(3));
FF := FunctionField(C2);
AFF := AlgorithmicFunctionField(FF);
pls1:=Places(AFF,1);
pls2:=Places(AFF,2);
#pls1,#pls2; // 8 17

// 2+2+2
s:={};
for i:=1 to #pls2 do
for j:=i to #pls2 do
for k:=j to #pls2 do
s:=s  join {Dimension(RiemannRochSpace(pls2[i]+pls2[j]+pls2[k]))};
end for;
end for;
end for;
s;

// 2+4
s:={};
for i:=1 to #pls2 do
for k:=1 to #Places(AFF,4) do
s:=s  join {Dimension(RiemannRochSpace(pls2[i]+Places(AFF,4)[k]))};
end for;
end for;
s;

// 3+3
s:={};
for i:=1 to #Places(AFF,3) do
for j:=i to #Places(AFF,3) do
s:=s  join {Dimension(RiemannRochSpace(Places(AFF,3)[i]+Places(AFF,3)[j]))};
end for;
end for;
s;

// 6
s:={};
for i:=1 to #Places(AFF,6) do
s:=s  join {Dimension(RiemannRochSpace(Places(AFF,6)[i]))};
end for;
s;

// 1+2+3
s:={};
for i:=1 to #pls1 do
for j:=1 to #pls2 do
for k:=1 to #Places(AFF,3) do
s:=s  join {Dimension(RiemannRochSpace(pls1[i]+pls2[j]+Places(AFF,3)[k]))};
end for;
end for;
end for;
s;

// 1+5
s:={};
for i:=1 to #pls1 do
for k:=1 to #Places(AFF,5) do
s:=s  join {Dimension(RiemannRochSpace(pls1[i]+Places(AFF,5)[k]))};
end for;
end for;
s;

// 1+1+2+2
s:={};
for i:=1 to #pls1 do
for j:=i to #pls1 do
for k:=1 to #pls2 do
for l:=k to #pls2 do
s:=s  join {Dimension(RiemannRochSpace(pls1[i]+pls1[j]+pls2[k]+pls2[l]))};
end for;
end for;
end for;
end for;
s;

// 1+1+4
s:={};
for i:=1 to #pls1 do
for j:=i to #pls1 do
for k:=1 to #Places(AFF,4) do
s:=s  join {Dimension(RiemannRochSpace(pls1[i]+pls2[j]+Places(AFF,4)[k]))};
end for;
end for;
end for;
s;

// now we consider the cases with poles of higher multiplicity

// 3*1+3
s:={};
for i:=1 to #pls1 do
for j:=1 to #Places(AFF,3) do
s:=s  join {Dimension(RiemannRochSpace(3*pls1[i]+Places(AFF,3)[j]))};
end for;
end for;
s;

// 4*1+2
s:={};
for i:=1 to #pls1 do
for j:=1 to #pls2 do
s:=s  join {Dimension(RiemannRochSpace(4*pls1[i]+pls2[j]))};
end for;
end for;
s;

// 6*1
s:={};
for i:=1 to #pls1 do
s:=s  join {Dimension(RiemannRochSpace(6*pls1[i]))};
end for;
s;

// 2*1+1+3
s:={};
for i:=1 to #pls1 do
for j:=1 to #Places(AFF,3) do
s:=s  join {Dimension(RiemannRochSpace(2*pls1[1]+pls1[i]+Places(AFF,3)[j]))};
end for;
end for;
s;

// 1+2*1+3
s:={};
for i:=1 to #pls1 do
for j:=1 to #Places(AFF,3) do
s:=s  join {Dimension(RiemannRochSpace(pls1[1]+2*pls1[i]+Places(AFF,3)[j]))};
end for;
end for;
s;

// 3*1+1+2
s:={};
for i:=1 to #pls1 do
for j:=1 to #pls2 do
s:=s  join {Dimension(RiemannRochSpace(3*pls1[1]+pls1[i]+pls2[j]))};
end for;
end for;
s;

// 2*1+2*1+2
s:={};
for i:=1 to #pls1 do
for j:=1 to #pls2 do
s:=s  join {Dimension(RiemannRochSpace(2*pls1[1]+2*pls1[i]+pls2[j]))};
end for;
end for;
s;

// 1+3*1+2
s:={};
for i:=1 to #pls1 do
for j:=1 to #pls2 do
s:=s  join {Dimension(RiemannRochSpace(pls1[1]+3*pls1[i]+pls2[j]))};
end for;
end for;
s;

// k*1+(6-k)*1
s:={};
for i:=1 to #pls1 do
for k:=1 to 5 do
s:=s  join {Dimension(RiemannRochSpace(k*pls1[1]+(6-k)*pls1[i]))};
end for;
end for;
s;
